spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC
    hibernate:
      ddl-auto: validate
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true
    baseline-version: 0
    clean-on-validation-error: false
    clean-disabled: true
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
  security:
    oauth2:
      client:
        registration:
          azure-ad:
            provider: azure-ad
            client-id: ${AZURE_CLIENT_ID}
            client-secret: ${AZURE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
              - offline_access
              - User.Read
              - User.ReadBasic.All
            client-name: Azure AD
            redirect-uri: ${AZURE_REDIRECT_URI:https://api.timeaway.com/api/v1/auth/microsoft/callback}
            client-authentication-method: post
            authorization-grant-type: authorization_code
        provider:
          azure-ad:
            issuer-uri: https://login.microsoftonline.com/${AZURE_TENANT_ID}/v2.0
            authorization-uri: https://login.microsoftonline.com/${AZURE_TENANT_ID}/oauth2/v2.0/authorize
            token-uri: https://login.microsoftonline.com/${AZURE_TENANT_ID}/oauth2/v2.0/token
            jwk-set-uri: https://login.microsoftonline.com/${AZURE_TENANT_ID}/discovery/v2.0/keys
            user-info-uri: https://graph.microsoft.com/oidc/userinfo
            user-name-attribute: preferred_username
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:3600000} # 1 hour default

app:
  frontend:
    url: ${APP_FRONTEND_URL:https://timeaway.com}
  api:
    url: ${APP_API_URL:https://api.timeaway.com}
  jwt:
    refresh-token:
      expiration: ${JWT_REFRESH_EXPIRATION:86400000} # 24 hours default
  file-storage:
    location: ${FILE_STORAGE_LOCATION:/app/uploads}
    max-file-size: 5MB
    allowed-content-types:
      - application/pdf
      - application/msword
      - application/vnd.openxmlformats-officedocument.wordprocessingml.document
      - image/jpeg
      - image/png
  file-upload:
    max-file-size: 5242880  # 5MB in bytes
    allowed-content-types:
      - application/pdf
      - application/msword
      - application/vnd.openxmlformats-officedocument.wordprocessingml.document
      - image/jpeg
      - image/png

azure:
  activedirectory:
    tenant-id: ${AZURE_TENANT_ID}
    active-directory-groups: ${AZURE_AD_GROUPS:}

server:
  port: 8080

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
    filter: true
  packages-to-scan: dev.elieweb.timeaway

sendgrid:
  api-key: ${SENDGRID_API_KEY}
  from-email: ${SENDGRID_FROM_EMAIL:noreply@timeaway.com}
  from-name: ${SENDGRID_FROM_NAME:TimeAway}

logging:
  level:
    root: ERROR
    dev.elieweb.timeaway: INFO
    org.springframework: WARN
    org.hibernate: WARN
    org.springframework.security: INFO
    org.springframework.web: INFO
    org.springframework.oauth2: INFO
    org.springframework.security.oauth2: INFO
  file:
    name: /var/log/timeaway/application.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# MailJet Configuration
mailjet:
  api:
    key: ${MAILJET_API_KEY}
    secret: ${MAILJET_API_SECRET}
  sender:
    email: ${MAILJET_SENDER_EMAIL}
    name: TimeAway 